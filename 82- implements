implements is like abstract,  but in abstract we define the method we need to override (maybe only one, we not need to override all methods) 

but in implements =>> it override all methods! and redefine all methods and Attributes !!

so implements differnet with abstract, that implements need to override every method and also "attribute"

Ex.

class Animal {
  String? color;
  eat();
  run(){
    print("The animal is running");
  }
}

class Lion implements Animal{    // implements Animal class 
  @override
  String? color;    // note: even the attribute you need to override it, but important thing =>> if u defined the attribute in the parent class with value, then when u override it , u have to give it value, and if u make it nullable in parent class, u need to make it nullable in child class 
                    // so the attribute should be the same shape as the parent  
  // String color = "black";  // you will get an error, cuz in the parent class, u make "color" nullable , but here u gaved it value, and that will be an Error
@override
  eat(){
    print("lion is eating");
  }
  @override
  run(){
    print("lion is running");
  }
}
